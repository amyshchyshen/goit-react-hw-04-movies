{"version":3,"sources":["pages/MovieCastPage/MovieCastPage.module.css","pages/MovieCastPage/MovieCastPage.js"],"names":["module","exports","MovieCastPage","state","cast","match","this","props","moviesAPI","params","movieID","then","data","setState","map","id","cast_id","imagePath","profile_path","name","character","image","catch","err","Error","length","className","styles","actorsList","actor","key","actorsListItem","src","alt","actorPicture","actorInfo","noCast","Component"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,WAAa,kCAAkC,eAAiB,sCAAsC,aAAe,oCAAoC,UAAY,iCAAiC,OAAS,gC,8HCe3NC,E,2MASJC,MAAQ,CACNC,KAAM,I,mFAGa,IAAD,OACVC,EAAUC,KAAKC,MAAfF,MAERG,IACmBH,EAAMI,OAAOC,SAC7BC,MAAK,gBA7BGP,EA6BAQ,EAAH,EAAGA,KAAH,OAAc,EAAKC,SAAS,CAAET,MA7B3BA,EA6BwCQ,EAAKR,KA5BnDA,EAAKU,KACV,gBAAYC,EAAZ,EAAGC,QAA2BC,EAA9B,EAAgBC,aAAyBC,EAAzC,EAAyCA,KAAMC,EAA/C,EAA+CA,UAA/C,MAAgE,CAC9DL,KACAM,MAAM,mCAAD,OAAqCJ,GAC1CE,OACAC,sBAwBCE,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,Q,+BAIZ,IACAnB,EAASE,KAAKH,MAAdC,KAER,OACE,oCACGA,EAAKqB,OAAS,EACb,wBAAIC,UAAWC,IAAOC,YACnBxB,EAAKU,KAAI,SAAAe,GAAK,OACb,wBAAIC,IAAKD,EAAMd,GAAIW,UAAWC,IAAOI,gBACnC,yBACEC,IAAKH,EAAMR,MACXY,IAAI,QACJP,UAAWC,IAAOO,eAEpB,yBAAKR,UAAWC,IAAOQ,WACrB,4BAAKN,EAAMV,MACX,2BAAIU,EAAMT,iBAMlB,uBAAGM,UAAWC,IAAOS,QAArB,iC,GA9CkBC,aAqDbnC","file":"static/js/movie-cast-page.de8a69be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"actorsList\":\"MovieCastPage_actorsList__2t9cy\",\"actorsListItem\":\"MovieCastPage_actorsListItem__1Fphl\",\"actorPicture\":\"MovieCastPage_actorPicture__YsFl5\",\"actorInfo\":\"MovieCastPage_actorInfo__3dEva\",\"noCast\":\"MovieCastPage_noCast__XkQF-\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as moviesAPI from '../../services/moviesAPI';\nimport styles from './MovieCastPage.module.css';\n\nconst mapper = cast => {\n  return cast.map(\n    ({ cast_id: id, profile_path: imagePath, name, character }) => ({\n      id,\n      image: `https://image.tmdb.org/t/p/w300/${imagePath}`,\n      name,\n      character,\n    }),\n  );\n};\n\nclass MovieCastPage extends Component {\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        movieID: PropTypes.string,\n      }),\n    }).isRequired,\n  };\n\n  state = {\n    cast: [],\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n\n    moviesAPI\n      .getMovieCredits(match.params.movieID)\n      .then(({ data }) => this.setState({ cast: mapper(data.cast) }))\n      .catch(err => {\n        throw new Error(err);\n      });\n  }\n\n  render() {\n    const { cast } = this.state;\n\n    return (\n      <>\n        {cast.length > 0 ? (\n          <ul className={styles.actorsList}>\n            {cast.map(actor => (\n              <li key={actor.id} className={styles.actorsListItem}>\n                <img\n                  src={actor.image}\n                  alt=\"Actor\"\n                  className={styles.actorPicture}\n                />\n                <div className={styles.actorInfo}>\n                  <h3>{actor.name}</h3>\n                  <p>{actor.character}</p>\n                </div>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p className={styles.noCast}>No information provided.</p>\n        )}\n      </>\n    );\n  }\n}\n\nexport default MovieCastPage;\n"],"sourceRoot":""}